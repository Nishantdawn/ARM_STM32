ARM GAS  /tmp/ccxvQhJY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB136:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include <stdio.h>
  24:Src/main.c    **** #include <string.h>
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccxvQhJY.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** UART_HandleTypeDef huart2;
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  52:Src/main.c    **** void SystemClock_Config(void);
  53:Src/main.c    **** static void MX_GPIO_Init(void);
  54:Src/main.c    **** static void MX_USART2_UART_Init(void);
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** char TxBuf[100];
  62:Src/main.c    **** /* USER CODE END 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /**
  65:Src/main.c    ****   * @brief  The application entry point.
  66:Src/main.c    ****   * @retval int
  67:Src/main.c    ****   */
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccxvQhJY.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    ****   MX_USART2_UART_Init();
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END 2 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Infinite loop */
  98:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  99:Src/main.c    ****   while (1)
 100:Src/main.c    ****   {
 101:Src/main.c    ****     /* USER CODE END WHILE */
 102:Src/main.c    ****     memset(TxBuf,0,100);
 103:Src/main.c    ****     sprintf(TxBuf, "Hello World!\n");
 104:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t *)TxBuf,strlen(TxBuf), 0xFFFF);
 105:Src/main.c    **** HAL_GPIO_TogglePin(GPIOD, green_led_Pin|orange_led_Pin|red_led_Pin|blue_led_Pin);
 106:Src/main.c    **** HAL_Delay(1000);
 107:Src/main.c    ****     /* USER CODE BEGIN 3 */
 108:Src/main.c    ****   }
 109:Src/main.c    ****   /* USER CODE END 3 */
 110:Src/main.c    **** }
 111:Src/main.c    **** 
 112:Src/main.c    **** /**
 113:Src/main.c    ****   * @brief System Clock Configuration
 114:Src/main.c    ****   * @retval None
 115:Src/main.c    ****   */
 116:Src/main.c    **** void SystemClock_Config(void)
 117:Src/main.c    **** {
 118:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Src/main.c    **** 
 121:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 122:Src/main.c    ****   */
 123:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 124:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 125:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 126:Src/main.c    ****   */
 127:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 128:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 135:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 136:Src/main.c    ****   {
 137:Src/main.c    ****     Error_Handler();
 138:Src/main.c    ****   }
 139:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 140:Src/main.c    ****   */
 141:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
ARM GAS  /tmp/ccxvQhJY.s 			page 4


 146:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 147:Src/main.c    **** 
 148:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 149:Src/main.c    ****   {
 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    **** }
 153:Src/main.c    **** 
 154:Src/main.c    **** /**
 155:Src/main.c    ****   * @brief USART2 Initialization Function
 156:Src/main.c    ****   * @param None
 157:Src/main.c    ****   * @retval None
 158:Src/main.c    ****   */
 159:Src/main.c    **** static void MX_USART2_UART_Init(void)
 160:Src/main.c    **** {
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 165:Src/main.c    **** 
 166:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 169:Src/main.c    ****   huart2.Instance = USART2;
 170:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 171:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 172:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 173:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 174:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 175:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 176:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 177:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     Error_Handler();
 180:Src/main.c    ****   }
 181:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 184:Src/main.c    **** 
 185:Src/main.c    **** }
 186:Src/main.c    **** 
 187:Src/main.c    **** /**
 188:Src/main.c    ****   * @brief GPIO Initialization Function
 189:Src/main.c    ****   * @param None
 190:Src/main.c    ****   * @retval None
 191:Src/main.c    ****   */
 192:Src/main.c    **** static void MX_GPIO_Init(void)
 193:Src/main.c    **** {
  28              		.loc 1 193 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
ARM GAS  /tmp/ccxvQhJY.s 			page 5


  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 194:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 194 3 view .LVU1
  42              		.loc 1 194 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* GPIO Ports Clock Enable */
 197:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 197 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 197 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 197 3 view .LVU5
  54 0012 194B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 197 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 197 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE2:
  65              		.loc 1 197 3 view .LVU8
 198:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 198 3 view .LVU9
  67              	.LBB3:
  68              		.loc 1 198 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 198 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 198 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00102 		and	r2, r2, #1
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 198 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE3:
  81              		.loc 1 198 3 view .LVU14
 199:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  82              		.loc 1 199 3 view .LVU15
  83              	.LBB4:
  84              		.loc 1 199 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 199 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccxvQhJY.s 			page 6


  88 003e 42F00802 		orr	r2, r2, #8
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 199 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00803 		and	r3, r3, #8
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 199 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE4:
  97              		.loc 1 199 3 view .LVU20
 200:Src/main.c    **** 
 201:Src/main.c    ****   /*Configure GPIO pin Output Level */
 202:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, green_led_Pin|orange_led_Pin|red_led_Pin|blue_led_Pin, GPIO_PIN_RESET);
  98              		.loc 1 202 3 view .LVU21
  99 004e 0B4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 4FF47041 		mov	r1, #61440
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 203:Src/main.c    **** 
 204:Src/main.c    ****   /*Configure GPIO pins : green_led_Pin orange_led_Pin red_led_Pin blue_led_Pin */
 205:Src/main.c    ****   GPIO_InitStruct.Pin = green_led_Pin|orange_led_Pin|red_led_Pin|blue_led_Pin;
 105              		.loc 1 205 3 view .LVU22
 106              		.loc 1 205 23 is_stmt 0 view .LVU23
 107 005c 4FF47043 		mov	r3, #61440
 108 0060 0393     		str	r3, [sp, #12]
 206:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 206 3 is_stmt 1 view .LVU24
 110              		.loc 1 206 24 is_stmt 0 view .LVU25
 111 0062 0123     		movs	r3, #1
 112 0064 0493     		str	r3, [sp, #16]
 207:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 207 3 is_stmt 1 view .LVU26
 114              		.loc 1 207 24 is_stmt 0 view .LVU27
 115 0066 0594     		str	r4, [sp, #20]
 208:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 208 3 is_stmt 1 view .LVU28
 117              		.loc 1 208 25 is_stmt 0 view .LVU29
 118 0068 0694     		str	r4, [sp, #24]
 209:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 119              		.loc 1 209 3 is_stmt 1 view .LVU30
 120 006a 03A9     		add	r1, sp, #12
 121 006c 2846     		mov	r0, r5
 122 006e FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 210:Src/main.c    **** 
 211:Src/main.c    **** }
 124              		.loc 1 211 1 is_stmt 0 view .LVU31
 125 0072 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0074 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0076 00BF     		.align	2
 132              	.L3:
ARM GAS  /tmp/ccxvQhJY.s 			page 7


 133 0078 00380240 		.word	1073887232
 134 007c 000C0240 		.word	1073875968
 135              		.cfi_endproc
 136              	.LFE136:
 138              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	MX_USART2_UART_Init:
 146              	.LFB135:
 160:Src/main.c    **** 
 147              		.loc 1 160 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
 169:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 156              		.loc 1 169 3 view .LVU33
 169:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 157              		.loc 1 169 19 is_stmt 0 view .LVU34
 158 0002 0848     		ldr	r0, .L7
 159 0004 084B     		ldr	r3, .L7+4
 160 0006 0360     		str	r3, [r0]
 170:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 161              		.loc 1 170 3 is_stmt 1 view .LVU35
 170:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 162              		.loc 1 170 24 is_stmt 0 view .LVU36
 163 0008 4FF4E133 		mov	r3, #115200
 164 000c 4360     		str	r3, [r0, #4]
 171:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 165              		.loc 1 171 3 is_stmt 1 view .LVU37
 171:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 166              		.loc 1 171 26 is_stmt 0 view .LVU38
 167 000e 0023     		movs	r3, #0
 168 0010 8360     		str	r3, [r0, #8]
 172:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 169              		.loc 1 172 3 is_stmt 1 view .LVU39
 172:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 170              		.loc 1 172 24 is_stmt 0 view .LVU40
 171 0012 C360     		str	r3, [r0, #12]
 173:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 172              		.loc 1 173 3 is_stmt 1 view .LVU41
 173:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 173              		.loc 1 173 22 is_stmt 0 view .LVU42
 174 0014 0361     		str	r3, [r0, #16]
 174:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 175              		.loc 1 174 3 is_stmt 1 view .LVU43
 174:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 176              		.loc 1 174 20 is_stmt 0 view .LVU44
 177 0016 0C22     		movs	r2, #12
 178 0018 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/ccxvQhJY.s 			page 8


 175:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 179              		.loc 1 175 3 is_stmt 1 view .LVU45
 175:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 180              		.loc 1 175 25 is_stmt 0 view .LVU46
 181 001a 8361     		str	r3, [r0, #24]
 176:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 182              		.loc 1 176 3 is_stmt 1 view .LVU47
 176:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 183              		.loc 1 176 28 is_stmt 0 view .LVU48
 184 001c C361     		str	r3, [r0, #28]
 177:Src/main.c    ****   {
 185              		.loc 1 177 3 is_stmt 1 view .LVU49
 177:Src/main.c    ****   {
 186              		.loc 1 177 7 is_stmt 0 view .LVU50
 187 001e FFF7FEFF 		bl	HAL_UART_Init
 188              	.LVL2:
 185:Src/main.c    **** 
 189              		.loc 1 185 1 view .LVU51
 190 0022 08BD     		pop	{r3, pc}
 191              	.L8:
 192              		.align	2
 193              	.L7:
 194 0024 00000000 		.word	huart2
 195 0028 00440040 		.word	1073759232
 196              		.cfi_endproc
 197              	.LFE135:
 199              		.section	.text.SystemClock_Config,"ax",%progbits
 200              		.align	1
 201              		.global	SystemClock_Config
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	SystemClock_Config:
 208              	.LFB134:
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 209              		.loc 1 117 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 80
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 30B5     		push	{r4, r5, lr}
 214              	.LCFI4:
 215              		.cfi_def_cfa_offset 12
 216              		.cfi_offset 4, -12
 217              		.cfi_offset 5, -8
 218              		.cfi_offset 14, -4
 219 0002 95B0     		sub	sp, sp, #84
 220              	.LCFI5:
 221              		.cfi_def_cfa_offset 96
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 222              		.loc 1 118 3 view .LVU53
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 223              		.loc 1 118 22 is_stmt 0 view .LVU54
 224 0004 3022     		movs	r2, #48
 225 0006 0021     		movs	r1, #0
 226 0008 08A8     		add	r0, sp, #32
 227 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccxvQhJY.s 			page 9


 228              	.LVL3:
 119:Src/main.c    **** 
 229              		.loc 1 119 3 is_stmt 1 view .LVU55
 119:Src/main.c    **** 
 230              		.loc 1 119 22 is_stmt 0 view .LVU56
 231 000e 0024     		movs	r4, #0
 232 0010 0394     		str	r4, [sp, #12]
 233 0012 0494     		str	r4, [sp, #16]
 234 0014 0594     		str	r4, [sp, #20]
 235 0016 0694     		str	r4, [sp, #24]
 236 0018 0794     		str	r4, [sp, #28]
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 237              		.loc 1 123 3 is_stmt 1 view .LVU57
 238              	.LBB5:
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 239              		.loc 1 123 3 view .LVU58
 240 001a 0194     		str	r4, [sp, #4]
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 241              		.loc 1 123 3 view .LVU59
 242 001c 1C4B     		ldr	r3, .L11
 243 001e 1A6C     		ldr	r2, [r3, #64]
 244 0020 42F08052 		orr	r2, r2, #268435456
 245 0024 1A64     		str	r2, [r3, #64]
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 246              		.loc 1 123 3 view .LVU60
 247 0026 1B6C     		ldr	r3, [r3, #64]
 248 0028 03F08053 		and	r3, r3, #268435456
 249 002c 0193     		str	r3, [sp, #4]
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 250              		.loc 1 123 3 view .LVU61
 251 002e 019B     		ldr	r3, [sp, #4]
 252              	.LBE5:
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 253              		.loc 1 123 3 view .LVU62
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 254              		.loc 1 124 3 view .LVU63
 255              	.LBB6:
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 256              		.loc 1 124 3 view .LVU64
 257 0030 0294     		str	r4, [sp, #8]
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 258              		.loc 1 124 3 view .LVU65
 259 0032 184B     		ldr	r3, .L11+4
 260 0034 1A68     		ldr	r2, [r3]
 261 0036 42F48042 		orr	r2, r2, #16384
 262 003a 1A60     		str	r2, [r3]
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 263              		.loc 1 124 3 view .LVU66
 264 003c 1B68     		ldr	r3, [r3]
 265 003e 03F48043 		and	r3, r3, #16384
 266 0042 0293     		str	r3, [sp, #8]
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 267              		.loc 1 124 3 view .LVU67
 268 0044 029B     		ldr	r3, [sp, #8]
 269              	.LBE6:
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 270              		.loc 1 124 3 view .LVU68
ARM GAS  /tmp/ccxvQhJY.s 			page 10


 127:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 271              		.loc 1 127 3 view .LVU69
 127:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 272              		.loc 1 127 36 is_stmt 0 view .LVU70
 273 0046 0123     		movs	r3, #1
 274 0048 0893     		str	r3, [sp, #32]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 275              		.loc 1 128 3 is_stmt 1 view .LVU71
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 276              		.loc 1 128 30 is_stmt 0 view .LVU72
 277 004a 4FF48033 		mov	r3, #65536
 278 004e 0993     		str	r3, [sp, #36]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 279              		.loc 1 129 3 is_stmt 1 view .LVU73
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 280              		.loc 1 129 34 is_stmt 0 view .LVU74
 281 0050 0225     		movs	r5, #2
 282 0052 0E95     		str	r5, [sp, #56]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 283              		.loc 1 130 3 is_stmt 1 view .LVU75
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 284              		.loc 1 130 35 is_stmt 0 view .LVU76
 285 0054 4FF48003 		mov	r3, #4194304
 286 0058 0F93     		str	r3, [sp, #60]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 287              		.loc 1 131 3 is_stmt 1 view .LVU77
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 288              		.loc 1 131 30 is_stmt 0 view .LVU78
 289 005a 0423     		movs	r3, #4
 290 005c 1093     		str	r3, [sp, #64]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 291              		.loc 1 132 3 is_stmt 1 view .LVU79
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 292              		.loc 1 132 30 is_stmt 0 view .LVU80
 293 005e A823     		movs	r3, #168
 294 0060 1193     		str	r3, [sp, #68]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 295              		.loc 1 133 3 is_stmt 1 view .LVU81
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 296              		.loc 1 133 30 is_stmt 0 view .LVU82
 297 0062 1295     		str	r5, [sp, #72]
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 298              		.loc 1 134 3 is_stmt 1 view .LVU83
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 299              		.loc 1 134 30 is_stmt 0 view .LVU84
 300 0064 0723     		movs	r3, #7
 301 0066 1393     		str	r3, [sp, #76]
 135:Src/main.c    ****   {
 302              		.loc 1 135 3 is_stmt 1 view .LVU85
 135:Src/main.c    ****   {
 303              		.loc 1 135 7 is_stmt 0 view .LVU86
 304 0068 08A8     		add	r0, sp, #32
 305 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 306              	.LVL4:
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 307              		.loc 1 141 3 is_stmt 1 view .LVU87
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccxvQhJY.s 			page 11


 308              		.loc 1 141 31 is_stmt 0 view .LVU88
 309 006e 0F23     		movs	r3, #15
 310 0070 0393     		str	r3, [sp, #12]
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 311              		.loc 1 143 3 is_stmt 1 view .LVU89
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 312              		.loc 1 143 34 is_stmt 0 view .LVU90
 313 0072 0495     		str	r5, [sp, #16]
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 314              		.loc 1 144 3 is_stmt 1 view .LVU91
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 315              		.loc 1 144 35 is_stmt 0 view .LVU92
 316 0074 0594     		str	r4, [sp, #20]
 145:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 317              		.loc 1 145 3 is_stmt 1 view .LVU93
 145:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 318              		.loc 1 145 36 is_stmt 0 view .LVU94
 319 0076 4FF4A053 		mov	r3, #5120
 320 007a 0693     		str	r3, [sp, #24]
 146:Src/main.c    **** 
 321              		.loc 1 146 3 is_stmt 1 view .LVU95
 146:Src/main.c    **** 
 322              		.loc 1 146 36 is_stmt 0 view .LVU96
 323 007c 4FF48053 		mov	r3, #4096
 324 0080 0793     		str	r3, [sp, #28]
 148:Src/main.c    ****   {
 325              		.loc 1 148 3 is_stmt 1 view .LVU97
 148:Src/main.c    ****   {
 326              		.loc 1 148 7 is_stmt 0 view .LVU98
 327 0082 0521     		movs	r1, #5
 328 0084 03A8     		add	r0, sp, #12
 329 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 330              	.LVL5:
 152:Src/main.c    **** 
 331              		.loc 1 152 1 view .LVU99
 332 008a 15B0     		add	sp, sp, #84
 333              	.LCFI6:
 334              		.cfi_def_cfa_offset 12
 335              		@ sp needed
 336 008c 30BD     		pop	{r4, r5, pc}
 337              	.L12:
 338 008e 00BF     		.align	2
 339              	.L11:
 340 0090 00380240 		.word	1073887232
 341 0094 00700040 		.word	1073770496
 342              		.cfi_endproc
 343              	.LFE134:
 345              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 346              		.align	2
 347              	.LC0:
 348 0000 48656C6C 		.ascii	"Hello World!\012\000"
 348      6F20576F 
 348      726C6421 
 348      0A00
 349              		.section	.text.main,"ax",%progbits
 350              		.align	1
 351              		.global	main
ARM GAS  /tmp/ccxvQhJY.s 			page 12


 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	main:
 358              	.LFB133:
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
 359              		.loc 1 69 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ Volatile: function does not return.
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 08B5     		push	{r3, lr}
 365              	.LCFI7:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 369              		.loc 1 77 3 view .LVU101
 370 0002 FFF7FEFF 		bl	HAL_Init
 371              	.LVL6:
  84:Src/main.c    **** 
 372              		.loc 1 84 3 view .LVU102
 373 0006 FFF7FEFF 		bl	SystemClock_Config
 374              	.LVL7:
  91:Src/main.c    ****   MX_USART2_UART_Init();
 375              		.loc 1 91 3 view .LVU103
 376 000a FFF7FEFF 		bl	MX_GPIO_Init
 377              	.LVL8:
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
 378              		.loc 1 92 3 view .LVU104
 379 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 380              	.LVL9:
 381              	.L14:
  99:Src/main.c    ****   {
 382              		.loc 1 99 3 discriminator 1 view .LVU105
 102:Src/main.c    ****     sprintf(TxBuf, "Hello World!\n");
 383              		.loc 1 102 5 discriminator 1 view .LVU106
 384 0012 104C     		ldr	r4, .L16
 385 0014 6422     		movs	r2, #100
 386 0016 0021     		movs	r1, #0
 387 0018 2046     		mov	r0, r4
 388 001a FFF7FEFF 		bl	memset
 389              	.LVL10:
 103:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t *)TxBuf,strlen(TxBuf), 0xFFFF);
 390              		.loc 1 103 5 discriminator 1 view .LVU107
 391 001e 0E4B     		ldr	r3, .L16+4
 392 0020 07CB     		ldmia	r3!, {r0, r1, r2}
 393 0022 2060     		str	r0, [r4]	@ unaligned
 394 0024 6160     		str	r1, [r4, #4]	@ unaligned
 395 0026 A260     		str	r2, [r4, #8]	@ unaligned
 396 0028 1B88     		ldrh	r3, [r3]	@ unaligned
 397 002a A381     		strh	r3, [r4, #12]	@ unaligned
 104:Src/main.c    **** HAL_GPIO_TogglePin(GPIOD, green_led_Pin|orange_led_Pin|red_led_Pin|blue_led_Pin);
 398              		.loc 1 104 5 discriminator 1 view .LVU108
 104:Src/main.c    **** HAL_GPIO_TogglePin(GPIOD, green_led_Pin|orange_led_Pin|red_led_Pin|blue_led_Pin);
 399              		.loc 1 104 49 is_stmt 0 discriminator 1 view .LVU109
ARM GAS  /tmp/ccxvQhJY.s 			page 13


 400 002c 2046     		mov	r0, r4
 401 002e FFF7FEFF 		bl	strlen
 402              	.LVL11:
 104:Src/main.c    **** HAL_GPIO_TogglePin(GPIOD, green_led_Pin|orange_led_Pin|red_led_Pin|blue_led_Pin);
 403              		.loc 1 104 5 discriminator 1 view .LVU110
 404 0032 4FF6FF73 		movw	r3, #65535
 405 0036 82B2     		uxth	r2, r0
 406 0038 2146     		mov	r1, r4
 407 003a 0848     		ldr	r0, .L16+8
 408 003c FFF7FEFF 		bl	HAL_UART_Transmit
 409              	.LVL12:
 105:Src/main.c    **** HAL_Delay(1000);
 410              		.loc 1 105 1 is_stmt 1 discriminator 1 view .LVU111
 411 0040 4FF47041 		mov	r1, #61440
 412 0044 0648     		ldr	r0, .L16+12
 413 0046 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 414              	.LVL13:
 106:Src/main.c    ****     /* USER CODE BEGIN 3 */
 415              		.loc 1 106 1 discriminator 1 view .LVU112
 416 004a 4FF47A70 		mov	r0, #1000
 417 004e FFF7FEFF 		bl	HAL_Delay
 418              	.LVL14:
  99:Src/main.c    ****   {
 419              		.loc 1 99 9 discriminator 1 view .LVU113
 420 0052 DEE7     		b	.L14
 421              	.L17:
 422              		.align	2
 423              	.L16:
 424 0054 00000000 		.word	TxBuf
 425 0058 00000000 		.word	.LC0
 426 005c 00000000 		.word	huart2
 427 0060 000C0240 		.word	1073875968
 428              		.cfi_endproc
 429              	.LFE133:
 431              		.section	.text.Error_Handler,"ax",%progbits
 432              		.align	1
 433              		.global	Error_Handler
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	Error_Handler:
 440              	.LFB137:
 212:Src/main.c    **** 
 213:Src/main.c    **** /* USER CODE BEGIN 4 */
 214:Src/main.c    **** 
 215:Src/main.c    **** /* USER CODE END 4 */
 216:Src/main.c    **** 
 217:Src/main.c    **** /**
 218:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 219:Src/main.c    ****   * @retval None
 220:Src/main.c    ****   */
 221:Src/main.c    **** void Error_Handler(void)
 222:Src/main.c    **** {
 441              		.loc 1 222 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccxvQhJY.s 			page 14


 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 223:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 224:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 227:Src/main.c    **** }
 446              		.loc 1 227 1 view .LVU115
 447 0000 7047     		bx	lr
 448              		.cfi_endproc
 449              	.LFE137:
 451              		.comm	TxBuf,100,4
 452              		.comm	huart2,64,4
 453              		.text
 454              	.Letext0:
 455              		.file 2 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 456              		.file 3 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 457              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 458              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 459              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 460              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 461              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 462              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 463              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 464              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 465              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 466              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 467              		.file 14 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none
 468              		.file 15 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/in
 469              		.file 16 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/in
 470              		.file 17 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/in
 471              		.file 18 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/in
 472              		.file 19 "<built-in>"
ARM GAS  /tmp/ccxvQhJY.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccxvQhJY.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccxvQhJY.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccxvQhJY.s:133    .text.MX_GPIO_Init:0000000000000078 $d
     /tmp/ccxvQhJY.s:139    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccxvQhJY.s:145    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccxvQhJY.s:194    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccxvQhJY.s:200    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccxvQhJY.s:207    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccxvQhJY.s:340    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccxvQhJY.s:346    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccxvQhJY.s:350    .text.main:0000000000000000 $t
     /tmp/ccxvQhJY.s:357    .text.main:0000000000000000 main
     /tmp/ccxvQhJY.s:424    .text.main:0000000000000054 $d
                            *COM*:0000000000000064 TxBuf
     /tmp/ccxvQhJY.s:432    .text.Error_Handler:0000000000000000 $t
     /tmp/ccxvQhJY.s:439    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
strlen
HAL_UART_Transmit
HAL_GPIO_TogglePin
HAL_Delay
