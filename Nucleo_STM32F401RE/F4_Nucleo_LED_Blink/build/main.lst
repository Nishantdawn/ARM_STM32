ARM GAS  /tmp/ccsag7Xd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB132:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccsag7Xd.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  50:Src/main.c    **** void SystemClock_Config(void);
  51:Src/main.c    **** static void MX_GPIO_Init(void);
  52:Src/main.c    **** /* USER CODE BEGIN PFP */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN 0 */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /**
  62:Src/main.c    ****   * @brief  The application entry point.
  63:Src/main.c    ****   * @retval int
  64:Src/main.c    ****   */
  65:Src/main.c    **** int main(void)
  66:Src/main.c    **** {
  67:Src/main.c    ****   /* USER CODE BEGIN 1 */
  68:Src/main.c    **** 
  69:Src/main.c    ****   /* USER CODE END 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Src/main.c    ****   HAL_Init();
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE BEGIN Init */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Configure the system clock */
  81:Src/main.c    ****   SystemClock_Config();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Initialize all configured peripherals */
  88:Src/main.c    ****   MX_GPIO_Init();
ARM GAS  /tmp/ccsag7Xd.s 			page 3


  89:Src/main.c    ****   /* USER CODE BEGIN 2 */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END 2 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Infinite loop */
  94:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  95:Src/main.c    ****   while (1)
  96:Src/main.c    ****   {
  97:Src/main.c    ****     /* USER CODE END WHILE */
  98:Src/main.c    **** HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
  99:Src/main.c    **** HAL_Delay(1000);
 100:Src/main.c    **** HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 101:Src/main.c    **** HAL_Delay(1000);
 102:Src/main.c    ****     /* USER CODE BEGIN 3 */
 103:Src/main.c    ****   }
 104:Src/main.c    ****   /* USER CODE END 3 */
 105:Src/main.c    **** }
 106:Src/main.c    **** 
 107:Src/main.c    **** /**
 108:Src/main.c    ****   * @brief System Clock Configuration
 109:Src/main.c    ****   * @retval None
 110:Src/main.c    ****   */
 111:Src/main.c    **** void SystemClock_Config(void)
 112:Src/main.c    **** {
 113:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 114:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 115:Src/main.c    **** 
 116:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 117:Src/main.c    ****   */
 118:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 119:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 120:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 121:Src/main.c    ****   */
 122:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 123:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 124:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 131:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 132:Src/main.c    ****   {
 133:Src/main.c    ****     Error_Handler();
 134:Src/main.c    ****   }
 135:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 136:Src/main.c    ****   */
 137:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 142:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Src/main.c    **** 
 144:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 145:Src/main.c    ****   {
ARM GAS  /tmp/ccsag7Xd.s 			page 4


 146:Src/main.c    ****     Error_Handler();
 147:Src/main.c    ****   }
 148:Src/main.c    **** }
 149:Src/main.c    **** 
 150:Src/main.c    **** /**
 151:Src/main.c    ****   * @brief GPIO Initialization Function
 152:Src/main.c    ****   * @param None
 153:Src/main.c    ****   * @retval None
 154:Src/main.c    ****   */
 155:Src/main.c    **** static void MX_GPIO_Init(void)
 156:Src/main.c    **** {
  28              		.loc 1 156 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 157:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 157 3 view .LVU1
  42              		.loc 1 157 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* GPIO Ports Clock Enable */
 160:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 160 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 160 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 160 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 160 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 160 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
  65              		.loc 1 160 3 view .LVU8
 161:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 161 3 view .LVU9
  67              	.LBB3:
  68              		.loc 1 161 3 view .LVU10
ARM GAS  /tmp/ccsag7Xd.s 			page 5


  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 161 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 161 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 161 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE3:
  81              		.loc 1 161 3 view .LVU14
 162:Src/main.c    **** 
 163:Src/main.c    ****   /*Configure GPIO pin Output Level */
 164:Src/main.c    ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  82              		.loc 1 164 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 2021     		movs	r1, #32
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 165:Src/main.c    **** 
 166:Src/main.c    ****   /*Configure GPIO pin : LED_Pin */
 167:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Pin;
  89              		.loc 1 167 3 view .LVU16
  90              		.loc 1 167 23 is_stmt 0 view .LVU17
  91 0046 2023     		movs	r3, #32
  92 0048 0393     		str	r3, [sp, #12]
 168:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 168 3 is_stmt 1 view .LVU18
  94              		.loc 1 168 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 169:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 169 3 is_stmt 1 view .LVU20
  98              		.loc 1 169 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 170:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 170 3 is_stmt 1 view .LVU22
 101              		.loc 1 170 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 171:Src/main.c    ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 103              		.loc 1 171 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 172:Src/main.c    **** 
 173:Src/main.c    **** }
 108              		.loc 1 173 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccsag7Xd.s 			page 6


 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE132:
 122              		.section	.text.SystemClock_Config,"ax",%progbits
 123              		.align	1
 124              		.global	SystemClock_Config
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	SystemClock_Config:
 131              	.LFB131:
 112:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 132              		.loc 1 112 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 80
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136 0000 30B5     		push	{r4, r5, lr}
 137              	.LCFI3:
 138              		.cfi_def_cfa_offset 12
 139              		.cfi_offset 4, -12
 140              		.cfi_offset 5, -8
 141              		.cfi_offset 14, -4
 142 0002 95B0     		sub	sp, sp, #84
 143              	.LCFI4:
 144              		.cfi_def_cfa_offset 96
 113:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 145              		.loc 1 113 3 view .LVU27
 113:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146              		.loc 1 113 22 is_stmt 0 view .LVU28
 147 0004 3022     		movs	r2, #48
 148 0006 0021     		movs	r1, #0
 149 0008 08A8     		add	r0, sp, #32
 150 000a FFF7FEFF 		bl	memset
 151              	.LVL2:
 114:Src/main.c    **** 
 152              		.loc 1 114 3 is_stmt 1 view .LVU29
 114:Src/main.c    **** 
 153              		.loc 1 114 22 is_stmt 0 view .LVU30
 154 000e 0024     		movs	r4, #0
 155 0010 0394     		str	r4, [sp, #12]
 156 0012 0494     		str	r4, [sp, #16]
 157 0014 0594     		str	r4, [sp, #20]
 158 0016 0694     		str	r4, [sp, #24]
 159 0018 0794     		str	r4, [sp, #28]
 118:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 160              		.loc 1 118 3 is_stmt 1 view .LVU31
 161              	.LBB4:
 118:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 162              		.loc 1 118 3 view .LVU32
 163 001a 0194     		str	r4, [sp, #4]
 118:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 164              		.loc 1 118 3 view .LVU33
ARM GAS  /tmp/ccsag7Xd.s 			page 7


 165 001c 1B4B     		ldr	r3, .L7
 166 001e 1A6C     		ldr	r2, [r3, #64]
 167 0020 42F08052 		orr	r2, r2, #268435456
 168 0024 1A64     		str	r2, [r3, #64]
 118:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 169              		.loc 1 118 3 view .LVU34
 170 0026 1B6C     		ldr	r3, [r3, #64]
 171 0028 03F08053 		and	r3, r3, #268435456
 172 002c 0193     		str	r3, [sp, #4]
 118:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 173              		.loc 1 118 3 view .LVU35
 174 002e 019B     		ldr	r3, [sp, #4]
 175              	.LBE4:
 118:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 176              		.loc 1 118 3 view .LVU36
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 177              		.loc 1 119 3 view .LVU37
 178              	.LBB5:
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 179              		.loc 1 119 3 view .LVU38
 180 0030 0294     		str	r4, [sp, #8]
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 181              		.loc 1 119 3 view .LVU39
 182 0032 174A     		ldr	r2, .L7+4
 183 0034 1368     		ldr	r3, [r2]
 184 0036 23F44043 		bic	r3, r3, #49152
 185 003a 43F40043 		orr	r3, r3, #32768
 186 003e 1360     		str	r3, [r2]
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 187              		.loc 1 119 3 view .LVU40
 188 0040 1368     		ldr	r3, [r2]
 189 0042 03F44043 		and	r3, r3, #49152
 190 0046 0293     		str	r3, [sp, #8]
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 191              		.loc 1 119 3 view .LVU41
 192 0048 029B     		ldr	r3, [sp, #8]
 193              	.LBE5:
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 194              		.loc 1 119 3 view .LVU42
 122:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 195              		.loc 1 122 3 view .LVU43
 122:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 196              		.loc 1 122 36 is_stmt 0 view .LVU44
 197 004a 0225     		movs	r5, #2
 198 004c 0895     		str	r5, [sp, #32]
 123:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 199              		.loc 1 123 3 is_stmt 1 view .LVU45
 123:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 200              		.loc 1 123 30 is_stmt 0 view .LVU46
 201 004e 0123     		movs	r3, #1
 202 0050 0B93     		str	r3, [sp, #44]
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 203              		.loc 1 124 3 is_stmt 1 view .LVU47
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 204              		.loc 1 124 41 is_stmt 0 view .LVU48
 205 0052 1023     		movs	r3, #16
 206 0054 0C93     		str	r3, [sp, #48]
ARM GAS  /tmp/ccsag7Xd.s 			page 8


 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 207              		.loc 1 125 3 is_stmt 1 view .LVU49
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 208              		.loc 1 125 34 is_stmt 0 view .LVU50
 209 0056 0E95     		str	r5, [sp, #56]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 210              		.loc 1 126 3 is_stmt 1 view .LVU51
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 211              		.loc 1 126 35 is_stmt 0 view .LVU52
 212 0058 0F94     		str	r4, [sp, #60]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 213              		.loc 1 127 3 is_stmt 1 view .LVU53
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 214              		.loc 1 127 30 is_stmt 0 view .LVU54
 215 005a 0823     		movs	r3, #8
 216 005c 1093     		str	r3, [sp, #64]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 217              		.loc 1 128 3 is_stmt 1 view .LVU55
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 218              		.loc 1 128 30 is_stmt 0 view .LVU56
 219 005e 5423     		movs	r3, #84
 220 0060 1193     		str	r3, [sp, #68]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 221              		.loc 1 129 3 is_stmt 1 view .LVU57
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 222              		.loc 1 129 30 is_stmt 0 view .LVU58
 223 0062 1295     		str	r5, [sp, #72]
 130:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 224              		.loc 1 130 3 is_stmt 1 view .LVU59
 130:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225              		.loc 1 130 30 is_stmt 0 view .LVU60
 226 0064 0423     		movs	r3, #4
 227 0066 1393     		str	r3, [sp, #76]
 131:Src/main.c    ****   {
 228              		.loc 1 131 3 is_stmt 1 view .LVU61
 131:Src/main.c    ****   {
 229              		.loc 1 131 7 is_stmt 0 view .LVU62
 230 0068 08A8     		add	r0, sp, #32
 231 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 232              	.LVL3:
 137:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 233              		.loc 1 137 3 is_stmt 1 view .LVU63
 137:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 234              		.loc 1 137 31 is_stmt 0 view .LVU64
 235 006e 0F23     		movs	r3, #15
 236 0070 0393     		str	r3, [sp, #12]
 139:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 237              		.loc 1 139 3 is_stmt 1 view .LVU65
 139:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238              		.loc 1 139 34 is_stmt 0 view .LVU66
 239 0072 0495     		str	r5, [sp, #16]
 140:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 240              		.loc 1 140 3 is_stmt 1 view .LVU67
 140:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 241              		.loc 1 140 35 is_stmt 0 view .LVU68
 242 0074 0594     		str	r4, [sp, #20]
 141:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccsag7Xd.s 			page 9


 243              		.loc 1 141 3 is_stmt 1 view .LVU69
 141:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 244              		.loc 1 141 36 is_stmt 0 view .LVU70
 245 0076 4FF48053 		mov	r3, #4096
 246 007a 0693     		str	r3, [sp, #24]
 142:Src/main.c    **** 
 247              		.loc 1 142 3 is_stmt 1 view .LVU71
 142:Src/main.c    **** 
 248              		.loc 1 142 36 is_stmt 0 view .LVU72
 249 007c 0794     		str	r4, [sp, #28]
 144:Src/main.c    ****   {
 250              		.loc 1 144 3 is_stmt 1 view .LVU73
 144:Src/main.c    ****   {
 251              		.loc 1 144 7 is_stmt 0 view .LVU74
 252 007e 2946     		mov	r1, r5
 253 0080 03A8     		add	r0, sp, #12
 254 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 255              	.LVL4:
 148:Src/main.c    **** 
 256              		.loc 1 148 1 view .LVU75
 257 0086 15B0     		add	sp, sp, #84
 258              	.LCFI5:
 259              		.cfi_def_cfa_offset 12
 260              		@ sp needed
 261 0088 30BD     		pop	{r4, r5, pc}
 262              	.L8:
 263 008a 00BF     		.align	2
 264              	.L7:
 265 008c 00380240 		.word	1073887232
 266 0090 00700040 		.word	1073770496
 267              		.cfi_endproc
 268              	.LFE131:
 270              		.section	.text.main,"ax",%progbits
 271              		.align	1
 272              		.global	main
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	main:
 279              	.LFB130:
  66:Src/main.c    ****   /* USER CODE BEGIN 1 */
 280              		.loc 1 66 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ Volatile: function does not return.
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}
 286              	.LCFI6:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 3, -8
 289              		.cfi_offset 14, -4
  74:Src/main.c    **** 
 290              		.loc 1 74 3 view .LVU77
 291 0002 FFF7FEFF 		bl	HAL_Init
 292              	.LVL5:
  81:Src/main.c    **** 
ARM GAS  /tmp/ccsag7Xd.s 			page 10


 293              		.loc 1 81 3 view .LVU78
 294 0006 FFF7FEFF 		bl	SystemClock_Config
 295              	.LVL6:
  88:Src/main.c    ****   /* USER CODE BEGIN 2 */
 296              		.loc 1 88 3 view .LVU79
 297 000a FFF7FEFF 		bl	MX_GPIO_Init
 298              	.LVL7:
 299              	.L10:
  95:Src/main.c    ****   {
 300              		.loc 1 95 3 discriminator 1 view .LVU80
  98:Src/main.c    **** HAL_Delay(1000);
 301              		.loc 1 98 1 discriminator 1 view .LVU81
 302 000e 0A4C     		ldr	r4, .L12
 303 0010 0122     		movs	r2, #1
 304 0012 2021     		movs	r1, #32
 305 0014 2046     		mov	r0, r4
 306 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 307              	.LVL8:
  99:Src/main.c    **** HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 308              		.loc 1 99 1 discriminator 1 view .LVU82
 309 001a 4FF47A70 		mov	r0, #1000
 310 001e FFF7FEFF 		bl	HAL_Delay
 311              	.LVL9:
 100:Src/main.c    **** HAL_Delay(1000);
 312              		.loc 1 100 1 discriminator 1 view .LVU83
 313 0022 0022     		movs	r2, #0
 314 0024 2021     		movs	r1, #32
 315 0026 2046     		mov	r0, r4
 316 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 317              	.LVL10:
 101:Src/main.c    ****     /* USER CODE BEGIN 3 */
 318              		.loc 1 101 1 discriminator 1 view .LVU84
 319 002c 4FF47A70 		mov	r0, #1000
 320 0030 FFF7FEFF 		bl	HAL_Delay
 321              	.LVL11:
  95:Src/main.c    ****   {
 322              		.loc 1 95 9 discriminator 1 view .LVU85
 323 0034 EBE7     		b	.L10
 324              	.L13:
 325 0036 00BF     		.align	2
 326              	.L12:
 327 0038 00000240 		.word	1073872896
 328              		.cfi_endproc
 329              	.LFE130:
 331              		.section	.text.Error_Handler,"ax",%progbits
 332              		.align	1
 333              		.global	Error_Handler
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv4-sp-d16
 339              	Error_Handler:
 340              	.LFB133:
 174:Src/main.c    **** 
 175:Src/main.c    **** /* USER CODE BEGIN 4 */
 176:Src/main.c    **** 
 177:Src/main.c    **** /* USER CODE END 4 */
ARM GAS  /tmp/ccsag7Xd.s 			page 11


 178:Src/main.c    **** 
 179:Src/main.c    **** /**
 180:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 181:Src/main.c    ****   * @retval None
 182:Src/main.c    ****   */
 183:Src/main.c    **** void Error_Handler(void)
 184:Src/main.c    **** {
 341              		.loc 1 184 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 185:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 186:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 189:Src/main.c    **** }
 346              		.loc 1 189 1 view .LVU87
 347 0000 7047     		bx	lr
 348              		.cfi_endproc
 349              	.LFE133:
 351              		.text
 352              	.Letext0:
 353              		.file 2 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 354              		.file 3 "/media/icdu-nishant/ICDU/STM/arm-gcc/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/inc
 355              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 356              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 357              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 358              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 359              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 360              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 361              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 362              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 363              		.file 12 "<built-in>"
ARM GAS  /tmp/ccsag7Xd.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccsag7Xd.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccsag7Xd.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccsag7Xd.s:117    .text.MX_GPIO_Init:0000000000000060 $d
     /tmp/ccsag7Xd.s:123    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccsag7Xd.s:130    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccsag7Xd.s:265    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccsag7Xd.s:271    .text.main:0000000000000000 $t
     /tmp/ccsag7Xd.s:278    .text.main:0000000000000000 main
     /tmp/ccsag7Xd.s:327    .text.main:0000000000000038 $d
     /tmp/ccsag7Xd.s:332    .text.Error_Handler:0000000000000000 $t
     /tmp/ccsag7Xd.s:339    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
